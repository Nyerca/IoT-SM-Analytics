import numpy as np
import pandas as pd
import joblib
import tensorflow as tf
from tensorflow.keras.models import load_model

# Load the saved model and scaler
model = load_model("lstm_model.h5")
scaler = joblib.load("scaler.pkl")

# Load new data
data = """machine_id,timestamp,temperature,vibration,pressure,days_since_last_failure,cumulative_month_failures,seasonality,temperature_change,vibration_change,pressure_change,rolling_avg_temp_1d,rolling_avg_vib_1d,rolling_avg_press_1d,rolling_avg_temp_2d,rolling_avg_vib_2d,rolling_avg_press_2d,rolling_avg_temp_3d,rolling_avg_vib_3d,rolling_avg_press_3d
1,2025-05-15 16:40:00,39.982032899674,4.294642361878873,94.84107335610568,121,0,0,0.3182066687482532,0.012639785841772166,0.7597253547223204,39.96780343859736,4.391276613685785,94.89963248613752,40.09371700957088,4.451652660084344,95.06724332116565,40.173078822469904,4.451031671746271,94.95563210146648
1,2025-05-15 22:40:00,39.511701122738735,4.364810444897709,93.93078049215282,121,0,1,-0.47033177693526795,0.07016808301883604,-0.9102928639528614,39.886717043166485,4.341557496249505,94.06242989637948,39.959270676757264,4.406056817608645,95.05320198305505,40.11796401415897,4.4438465695088905,94.87022780069033
1,2025-05-16 06:27:00,34.622870083428865,1.5470312825272972,66.62582142987812,0,1,1,-4.888831039309871,-2.817779162370412,-27.304959062274705,38.44510758419184,3.6221216663352447,87.36975581988,39.373252583852,4.08112455569579,91.74165312520834,39.69526448102589,4.22101462435646,92.69758115678171
1,2025-05-16 07:52:00,34.30167180087864,1.7464052404507084,66.3530186895113,0,1,1,-0.32119828255022753,0.19937395792341128,-0.2728027403668136,37.6164204275292,3.2469783811583377,83.16640839380626,38.86609450555466,3.847652624171281,89.20278968163863,39.310007861015364,4.044256811220335,90.81582669483383
1,2025-05-16 13:44:00,34.543498546687466,1.6765620992842225,66.75956340730312,0,1,0,0.24182674580882946,-0.06984314116648593,0.40654471779181733,36.592354890681534,2.725890285807762,77.70205147499021,38.27865621853178,3.568246874927464,86.30669789356705,38.851207974960175,3.8465239762859555,88.881544087893
1,2025-05-16 17:17:00,33.99496494182849,1.324376715884398,66.74588535368797,0,1,0,-0.5485336048589744,-0.3521853833998245,-0.013678053615151953,35.39494129911244,2.131837156608867,72.08301387450668,37.68238797452414,3.249459720260816,83.32776226719139,38.52745843941806,3.6783808255925186,87.40583350561268
1,2025-05-16 22:29:00,34.38047730376259,1.370841162666406,66.83341233577688,0,1,1,0.3855123619340972,0.04646444678200812,0.0875269820889173,35.22586396655413,2.0050044909517903,71.20808028471838,37.12770678924184,2.9373003982060557,80.36298506980549,37.96263705481439,3.3799805613779172,84.9140370759752
"""


# Convert to DataFrame
from io import StringIO
df = pd.read_csv(StringIO(data))

# Select relevant features
features = [col for col in df.columns if col not in ["machine_id", "timestamp", "label"]]
X_new = df[features]

# Scale new data using the stored scaler
X_new_scaled = scaler.transform(X_new)

# Ensure data is in the right LSTM format
seq_length = 1

X_new_seq = []
for i in range(len(X_new_scaled) - seq_length + 1):
    X_new_seq.append(X_new_scaled[i : i + seq_length])

X_new_seq = np.array(X_new_seq)  # Shape should be (num_samples, seq_length, num_features)

# Make predictions
predictions = model.predict(X_new_seq)
predicted_labels = (predictions > 0.5).astype(int)

print("FIRST " + str(predicted_labels[2][0]))

# Print results
for i, pred in enumerate(predicted_labels):
    print(f"Sequence {i+1} Predicted Label: {pred[0]}")
